<launch>

    <!-- Launch gazebo with an empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="physics" value="dart" />
        <arg name="world_name" value="$(find microrobot)/worlds/custom_empty.world"/>
        <arg name="paused" default="true" />
		<arg name="use_sim_time" default="true" />
		<arg name="gui" default="true" />
		<arg name="headless" default="false" />
		<arg name="debug" default="false" />
    </include>

    <!-- ros_control  launch file -->
    <include file="$(find microrobot)/launch/control.launch" />
    
    <!-- Camera model -->
    <param name="/camera_description" 
        command="$(find xacro)/xacro 
        '$(find microrobot)/description/camera.xacro'" />

    <!-- Spawn the camera model -->
    <node name="spawn_camera" pkg="gazebo_ros" type="spawn_model"
        args="-param /camera_description -urdf -model camera" />


    <!-- Robot model -->
    <param name="/robot_description" 
        command="$(find xacro)/xacro 
        '$(find microrobot)/description/actual_robot.xacro'" />

    <!-- Spawn the robot model -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
        args="-param /robot_description -urdf -model microbot" />


    <!-- AR tracking package -->
    <arg name="marker_size"          default="3.0" />
    <arg name="max_new_marker_error" default="0.05" />
    <arg name="max_track_error"      default="0.05" />

    <arg name="cam_image_topic"      default="/microbot/camera1/image_raw" />
    <arg name="cam_info_topic"       default="/microbot/camera1/camera_info" />
    <arg name="output_frame"         default="/camera_link" />

    <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" 
        respawn="false" output="screen">

		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />

		<remap from="camera_image"  to="$(arg cam_image_topic)" />
		<remap from="camera_info"   to="$(arg cam_info_topic)" />

	</node>

    <!-- Start visual odometry -->
    <node pkg="microrobot" type="ar_tag_odometry.py" name="visual_odometry"/>

    <!-- robot localization package-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
        <rosparam command="load" file="$(find microrobot)/config/ekf_template.yaml" />

        <!--  Placeholder for output topic remapping
        You either remap on this node, the node that takes in the data, or both!
        <remap from="accel/filtered" to=""/>
        -->
        <remap from="odometry/filtered" to="/odom"/>

    </node>

</launch>